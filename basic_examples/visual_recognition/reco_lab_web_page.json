[
    {
        "id": "779c3fd7.ad35c",
        "type": "comment",
        "z": "3c316fb3.391bb",
        "name": "!!Make sure you bind Visual Recognition Service to Node-RED App!!",
        "info": "When running in BlueMix, the credentials for the service will be filled-in from BMix credentials management.\nFor this to work, the Visual Recognition Service has to be bound to the Node-RED application.\n",
        "x": 409,
        "y": 682,
        "wires": []
    },
    {
        "id": "e9e3336b.fac69",
        "type": "template",
        "z": "3c316fb3.391bb",
        "name": "Get Image URL",
        "field": "payload",
        "format": "html",
        "template": "<html>\n<head><title>Watson Visual Recognition on Node-RED</title></head>\n<body>\n<h1>Welcome to the Watson Visual Recognition Demo on Node-RED</h1>\n<h2>Select an image URL</h2>\n<form  action=\"{{req._parsedUrl.pathname}}\">\n    <img src=\"http://visual-recognition-demo.mybluemix.net/images/horses.jpg\" height='100'/>\n    <img src=\"http://visual-recognition-demo.mybluemix.net/images/73388.jpg\" height='100'/>\n    <img src=\"http://visual-recognition-demo.mybluemix.net/images/26537.jpg\" height='100'/>\n    <img src=\"http://visual-recognition-demo.mybluemix.net/images/4068.jpg\" height='100'/>\n    <br/>Copy above image location URL or enter any image URL:<br/>\n    <input type=\"text\" name=\"imageurl\"/>\n    <input type=\"submit\" value=\"Analyze\"/>\n</form>\n</body>\n</html>",
        "x": 419,
        "y": 506,
        "wires": [
            [
                "24ea610f.4c29de"
            ]
        ]
    },
    {
        "id": "57410e41.dac22",
        "type": "http in",
        "z": "3c316fb3.391bb",
        "name": "",
        "url": "/reco",
        "method": "get",
        "swaggerDoc": "",
        "x": 78,
        "y": 480,
        "wires": [
            [
                "5107970e.564238"
            ]
        ]
    },
    {
        "id": "24ea610f.4c29de",
        "type": "http response",
        "z": "3c316fb3.391bb",
        "name": "HTTP Response",
        "x": 702,
        "y": 528,
        "wires": []
    },
    {
        "id": "5107970e.564238",
        "type": "switch",
        "z": "3c316fb3.391bb",
        "name": "Check image param",
        "property": "payload.imageurl",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 170,
        "y": 553,
        "wires": [
            [
                "e9e3336b.fac69"
            ],
            [
                "cb046136.18073"
            ]
        ]
    },
    {
        "id": "44ccaaa2.c05bc4",
        "type": "template",
        "z": "3c316fb3.391bb",
        "name": "Report",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n<head><title>Watson Visual Recognition on Node-RED</title></head>\n<body>\n<h1>Node-RED Watson Visual Recognition output</h1>\n<p>Analyzed image: {{payload}}<br/><img src=\"{{payload}}\" height='100'/></p>\n<table border='1'>\n    <thead><tr><th>Name</th><th>Score</th></tr></thead>\n{{#result.images.0.classifiers.0.classes}}\n  <tr><td><b>{{class}}</b></td><td><i>{{score}}</i></td></tr>\n{{/result.images.0.classifiers.0.classes}}\n</table>\n<form  action=\"{{req._parsedUrl.pathname}}\">\n    <input type=\"submit\" value=\"Try again\"/>\n</form>\n</body>\n</html>",
        "x": 529,
        "y": 564,
        "wires": [
            [
                "24ea610f.4c29de"
            ]
        ]
    },
    {
        "id": "cb046136.18073",
        "type": "change",
        "z": "3c316fb3.391bb",
        "name": "Extract img URL",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.imageurl",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 163,
        "y": 612,
        "wires": [
            [
                "d4f1b42f.501978"
            ]
        ]
    },
    {
        "id": "af4358b6.2c7c48",
        "type": "debug",
        "z": "3c316fb3.391bb",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 756,
        "y": 614,
        "wires": []
    },
    {
        "id": "c3a3f1b.588141",
        "type": "function",
        "z": "3c316fb3.391bb",
        "name": "get labels",
        "func": "var labels = msg.result.images[0].classifiers[0].classes;\nmsg.payload = labels.map(function(i){\n   return i.class;\n});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 588,
        "y": 617,
        "wires": [
            [
                "af4358b6.2c7c48"
            ]
        ]
    },
    {
        "id": "d4f1b42f.501978",
        "type": "visual-recognition-v3",
        "z": "3c316fb3.391bb",
        "name": "",
        "apikey": "",
        "image-feature": "",
        "lang": "",
        "x": 377,
        "y": 620,
        "wires": [
            [
                "44ccaaa2.c05bc4",
                "c3a3f1b.588141"
            ]
        ]
    }
]
